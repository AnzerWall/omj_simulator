{
  "compilerOptions": {
    "module": "commonjs",
    //遵循的JavaScript模块规范。主要的候选项有：commonjs、AMD和es2015。为了后面与node.js保持一致，我们这里选用commonjs。
    "target": "esnext",
    //编译之后生成的JavaScript文件需要遵循的标准。有三个候选项：es3、es5、es2015 (即es6)
    "sourceMap": false,
    //编译时是否生成对应的source map文件。这个文件主要用于前端调试。当前端js文件被压缩引用后，出错时可借助同名的source map文件查找源文件中错误位置。
    "removeComments": false,
    //编译生成的JavaScript文件是否移除注释。
    "noImplicitAny": true,
    //为false时，如果编译器无法根据变量的使用来判断类型时，将用any类型代替。为true时，将进行强类型检查，无法推断类型时，提示错误。
    "outDir": "dist",
    //编译输出JavaScript文件存放的目录
    "resolveJsonModule": true,
    "esModuleInterop": true,
    "strict": true,
    "jsx": "preserve",
    "importHelpers": true,
    "moduleResolution": "node",
    "experimentalDecorators": true,
    "allowSyntheticDefaultImports": true,
    "baseUrl": ".",
    "types": [
      "webpack-env",
      "Phaser"
    ],
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ],
    "typeRoots": [
      "./node_modules/phaser/types"
    ]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "core/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  //include、exclude：编译.ts时需要包含/剔除的文件夹
  "exclude": [
    "node_modules"
  ]
}
